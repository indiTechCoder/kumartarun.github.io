[
  {
    "ID": "VKtlG5Ke320",
    "DurationInSeconds": 8587,
    "Title": "Node JS top to Bottom",
    "ShortDescription": "Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world.",
    "Description": "<p>MongoDB and Node.js are often used together because of their shared use of JavaScript and its object notation (JSON). JSON is quickly becoming the standard data format for web APIs and, as such, these two technologies are growing in popularity. Mongoose is an object data modeling (ODM) library that provides a rigorous modeling environment for your data, enforcing structure as needed while still maintaining the flexibility that makes MongoDB powerful.</p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-nodejs.jpg"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-nodejs.jpg"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL18FF0_8WHcpb3zY__eIW0G7"
  },
  {
    "ID": "oc_Aet6_80M",
    "DurationInSeconds": 8587,
    "Title": "Angular 2.0 Training  Series ",
    "ShortDescription": "Develop Across All Platforms Learn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. For web, mobile web, native mobile and native desktop.",
    "Description": "<p>Why Angular 2.0?</p><br/>       <p>Before getting into further discussion about Angular 2.0 (which has an estimated release date of the end of 2015), let’s briefly consider the philosophy behind the new version. Angular 2.0 development was started to address the following concerns:</p>       <p>Mobile<br/>       The new Angular version will be focused on the development of mobile apps. The rationale is that it’s easier to handle the desktop aspect of things, once the challenges related to mobile (performance, load time, etc.) have been addressed.       Modular<br/>       Various modules will be removed from Angular’s core, resulting in better performance. These will find their way into Angular’s ever-growing ecosystem of modules, meaning you’ll be able to pick and choose the parts you need.       Modern<br/>       Angular 2.0 will target ES6 and “evergreen” modern browsers (those automatically updated to the latest version). Building for these browsers means that various hacks and workarounds that make Angular harder to develop can be eliminated allowing developers to focus on the code related to their business domain.<p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-angular.jpg"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-angular.jpg"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL18kc871H8_u4p1NYgpXXF0p"
  },
  {
    "ID": "p_ks0FzrcnI",
    "DurationInSeconds": 8587,
    "Title": "ES6 javascript coming version of Javascript es2015",
    "ShortDescription": "ES6 is a significant update to the language, and the first update to the language since ES5 was standardized in 2009. Implementation of these features in major JavaScript engines is underway now. See the ES6 standard for full specification of the ECMAScript 6 language",
    "Description": "JavaScript has come a long ways in its 20 years of existence. It’s grown from a language used to define a few variables and functions to one that can be used to build robust applications on the client-side and server-side. Although it’s popularity continues to grow in large part due to its dynamic nature and ability to run anywhere, JavaScript as a language is still missing many key features that could help increase developer productivity and provide a more maintainable code base. Fortunately, ECMAScript 6 (ES6) adds many new features that will take the language to the next level.           This is the first post in a series I’ll be writing that will walk through key features in ES6 and explain how they can be used. I’ll also introduce tools and other languages along the way that can be used to work with ES6 in different browsers as well as on the server-side with frameworks like Node.js. The goal of this first post is to discuss the viability of using ES6 today and point out resources that can help you get started using it. Let’s kick things off by talking about a few of the key features in ES6.           Key Features in ES6           So what are some of the key features in ES6? Here’s a list of some of my favorites:           Arrow functions – A short-hand version of an anonymous function.           Block-level scope – ES6 now supports scoping variables to blocks (if, for, while, etc.) using the let keyword.           Classes – ES6 classes provide a way to encapsulate and extend code.           Constants – You can now define constants in ES6 code using the const keyword.           Default parameters – Ever wished that a function parameter could be assigned a default value? You can do that now in ES6.           Destructuring – A succinct and flexible way to assign values from arrays or objects into variables.           Generators – Specialized functions that create iterators using function* and the yield keyword.           Map – Dictionary type object that can be used to store key/value pairs.           Modules – Provides a modular way of organizing and loading code.           Promises – Used with async operations.           Rest parameters – Replaces the need for using arguments to access functions arguments. Allows you to get to an array representing “the rest of the parameters”.           Set – A collection object that can be used to store a list of data values.           Template Strings – Clean way to build up string values.",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-es6+javascript"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-es6+javascript"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL18sprMVE4h0AH-VnSGGOct7"
  },
  {
    "ID": "7hcfHyG0Inw",
    "DurationInSeconds": 8587,
    "Title": "React JS Training series : Everything about React with ES6",
    "ShortDescription": "React is a library developed by Facebook, and it is designed to build large applications with data that changes over time. Developers can use ReactJS to create user interfaces (UI) with high performance, where React would automatically manage all UI updates. React is all about building reusable web components, and it also renders on the server using Node.js. Learn ReactJS through online Learning Center, where you can find tutorials, videos, guides, and ReactJS tips & tricks from experienced ReactJS developers.",
    "Description": "<p>eact.js is a JavaScript Library developed by Facebook that functions as the V in an MVC. Known for its fast performance with a Virtual DOM, React.js is especially ideal for building mobile sites. What's more, since you can run React.js on the server, it's more SEO-friendly than other JavaScript Frameworks available. If you don't know JavaScript yet, you should probably start out with learning JavaScript.               To get a taste of how React works beyond a simple HelloWorld app, Facebook's official tutorial will teach you how to build your own realtime comment box with React. Once you have a feel for the library, you can go deeper and read the guides on how to build interactive and dynamic UI, form components, and more.                If you're building a website that deals with dynamic data, it is highly recommended you follow the Flux architectural design, which promotes a single directional dataflow. When React is used with Flux, it brings you the functionality of an MVC. However, according to Facebook, current MVCs don't scale well with building additional features to a large codebase, so React + Flux was their solution.</p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-react.jpg"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-react.jpg"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL1_2CpDKGg4-jNPqoirutxc5"
  },
  {
    "ID": "Y0lP4L2oXKw",
    "DurationInSeconds": 8587,
    "Title": "Node JS  with Mongoose",
    "ShortDescription": "Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world.",
    "Description": "<p>MongoDB and Node.js are often used together because of their shared use of JavaScript and its object notation (JSON). JSON is quickly becoming the standard data format for web APIs and, as such, these two technologies are growing in popularity. Mongoose is an object data modeling (ODM) library that provides a rigorous modeling environment for your data, enforcing structure as needed while still maintaining the flexibility that makes MongoDB powerful.</p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-mongo.png"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-mongo.png"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL18HkRdiTrSgI8LQpamxNokl"
  },
  {
    "ID": "OgFGKHjeQRc",
    "DurationInSeconds": 8587,
    "Title": "understanding Javascript promises with RX JS",
    "ShortDescription": "Promises can replace the asynchronous use of callbacks, and they provide several benefits over them. They start to gain ground as more and more libraries and frameworks embrace them as their primary way to handle asynchronicity. Ember.js is a great example of such a framework.",
    "Description": "<p>Promises arrive in JavaScript! Promises have been around for a while in the form of libraries, such as:<br/>Q<br/>when<br/>WinJS<br/> RSVP.js<br/> The above and JavaScript promises share a common, standardised behaviour called Promises/A+. If you're a jQuery user, they have something similar called Deferreds. However, Deferreds aren't Promise/A+ compliant, which makes them subtly different and less useful, so beware. jQuery also has a Promise type, but this is just a subset of Deferred and has the same issues.</p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-promises.jpg"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-promises.jpg"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL1_AqgDvtNv2jiyG3PwZUBP2"
  },
  {
    "ID": "E6D5_Ai0x6M",
    "DurationInSeconds": 8587,
    "Title": "Angular 2.0 Beginner Course",
    "ShortDescription": "Angular 2 is the next version of Googles massively popular MV* framework for building complex applications in the browser (and beyond).Angular 2 comes with almost everything you need to build a complicated frontend web or mobile apps, from powerful templates to fast rendering, data management, HTTP services, form handling, and so much more.",
    "Description": "<p>A full framework with support for forms, http requests, and much more. It’s a complete toolkit to building a web app ES6 and TypeScript compatible meaning that it plays well with ES6 modules, class systems, and has type support. Smart Dependency Injection which can be used to pass in classes and services with specific configuration (across the app) or pass them to be named and used under a different name. Yet, you can still use your ES6 modules for anything that doesn’t fit the DI scheme. You also use have to inject directives for templating.                           Powerful templating that’s essentially HTML with sugar syntax that allows you to take advantage of two-way binding, events, etc. right in your templates. Built-in directives allow for even more powerful templating with foreach loops (for of), ngIf and others.                           Modular. Angular 2 is broken down to numerous sub-packages                           Angular Universal. A project that allows sharing Angular code between various platforms. There is work to make Angular work on the back-end and with NativeScript as part of app development. </p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/angular2-main.jpg"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/angular2-main.jpg"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL193Thvz6vcNa1gVQA4HMc1y"
  },
  {
    "ID": "7uWv54Aq5Hw",
    "DurationInSeconds": 8587,
    "Title": "Angular JS Best Practices ",
    "ShortDescription": "Learn how to easily build single-page web applications using this popular JavaScript framework.",
    "Description": "<p>Learn how to easily build single-page web applications using this popular JavaScript framework.</p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-angularbest.jpg"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-angularbest.jpg"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL186hYSyAdPdTzXR9fcW7zj9"
  },
    {
    "ID": "fsMqPQeHj4M",
    "DurationInSeconds": 8587,
    "Title": "Bootstrap responsive design with angular js ",
    "ShortDescription": "UI Bootstrap Bootstrap components written in pure AngularJS by the AngularUI Team",
    "Description": "<p>Bootstrap and Angular are tools that a great number of people use. Often times, they are used together in projects. And why shouldn’t they be? They are both incredible tools that have changed the way CSS and JS work on the frontend.
     There is a problem when using them together though, specifically when you try to bring in the Bootstrap JavaScript components into an Angular project. When building out Angular projects, you should not add on the full jQuery library. jQlite is already included in Angular and this should be all the jQuery that is necessary. This is an important concept to grasp since bringing jQuery into your Angular project will make it harder for you to fully grasp the power of Angular and its data-binding goodness</p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-bootstrap.png"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-bootstrap.png"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL18o8dJNgIPeZQuUJYInbJTq"
  },
      {
    "ID": "DACmdCHYxA8",
    "DurationInSeconds": 8587,
    "Title": "Mongo DB  Quick Introduction ",
    "ShortDescription": "MongoDB is an open-source document database, and leading NoSQL database. MongoDB is written in c++, This tutorial will give you great understanding on MongoDB concepts needed to create and deploy a highly scalable and performance oriented database.",
    "Description": "<p>This tutorial is designed for Software Professionals who are willing to learn MongoDB Database in simple and easy steps. This tutorial will give you great understanding on MongoDB concepts and after completing this tutorial you will be at intermediate level of expertise from where you can take yourself at higher level of expertise.</p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/mongodb-main.png"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/mongodb-main.png"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL1-tPts6VCiUriv54_Kbl2V3"
  },
    {
    "ID": "dhCz3S9KId0",
    "DurationInSeconds": 8587,
    "Title": "MEAN stack application development ",
    "ShortDescription": "The Friendly & Fun Javascript Fullstack 
for your next web application
MEAN is an opinionated fullstack javascript framework - 
which simplifies and accelerates web application development.",
    "Description": "<p>MongoDB is the leading NoSQL database, empowering businesses to be more agile and scalable.<br/>
  Express<br/>
  Express is a minimal and flexible node.js web application framework, providing a robust set of features for building single and multi-page, and hybrid web applications.<br/>
  AngularJS<br/>
  AngularJS lets you extend HTML vocabulary for your application. The resulting environment is extraordinarily expressive, readable, and quick to develop.<br/>
  Node.js<br/>
  Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications.</p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-meanmain.png"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-meanmain.png"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL19vi9ZX3IiXnDb9Yb95Pzh8"
  }
    {
    "ID": "17gpncrCKV8",
    "DurationInSeconds": 8587,
    "Title": "JQuery in web development ",
    "ShortDescription": "jQuery is a JavaScript Library.
jQuery greatly simplifies JavaScript programming.
jQuery is easy to learn.",
    "Description": "<p>jQuery is a lightweight JavaScript library.
The purpose of jQuery is to make it much easier to use JavaScript on your website.
jQuery takes a lot of common tasks that require many lines of JavaScript code to accomplish, and wraps them into methods that you can call with a single line of code.
jQuery also simplifies a lot of the complicated things from JavaScript, like AJAX calls and DOM manipulation.
The jQuery library contains the following features:<br/>
HTML/DOM manipulation<br/>
CSS manipulation<br/>
HTML event methods<br/>
Effects and animations<br/>
AJAX<br/>
Utilities<br/></p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-jquery.jpg"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-jquery.jpg"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL18vzVelXE7qbNYuJCkdg9Wp"
  },
    {
    "ID": "zvDub5xvP4w",
    "DurationInSeconds": 8587,
    "Title": "Node JS for Beginners",
    "ShortDescription": "Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world.",
    "Description": "<p> Learn all about Node.js and start creating JavaScript applications in this course with Tarun Sharma. He shows how to install Node.js on Mac, Windows, and Linux and dives deep into its modules and Express framework for app development. Learn how to unit test your code, start sessions on web servers, stream data, and create simple command-line tools.
Topics include:<br/>
Why use Node.js?<br/>
Installing Node.js<br/>
Understanding the event loop<br/>
Initializing Node.js projects<br/>
Creating modules with getters and setters<br/>
Starting Express applications<br/>
Testing your code<br/>
Working with sessions and databases<br/>
Building command-line tools<br/>
Emitting events and attaching listeners<br/>
Controlling readable streams<br/></p>",
    "Thumbnails": [
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-nodebginner.jpg"
      },
      {
        "FullURL": "https://s3-eu-west-1.amazonaws.com/ubmas-bucket/tmp/main-nodebginner.jpg"
      }
    ],
    "URLs": {
      "www.youtube.com": "/CSS-tutorials/Building-Responsive-Single-Page-Design-PostCSS/417644-2.html"
    },
    "WelcomeVideoId": "PLIGDNOJWiL19JkDXy0bUmdKkuFgk-yhCy"
  }
]